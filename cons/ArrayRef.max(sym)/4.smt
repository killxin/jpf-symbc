;Data Structure
(declare-datatypes (T) (
    (MySet (mk-pair (mapping (Array T Bool))))
    (MyList (mk-pair (mapping (Array T Bool)) (element (Seq T))))
    (MyIterator (mk-pair (mapping (Array T Bool)) (previous (Array T Bool))))
    (MyListIterator (mk-pair (position Int) (element (Seq T))))
))
(declare-datatypes (K V) (
    (MyEntry (mk-pair (key K) (value V)))
    (MyMap (mk-pair (key (Array K Bool)) (mapping (Array K V))))
))
(declare-datatypes () (
    (FileInputStream (mk-pair (length Int) (readPosition Int) (isOpen Bool)))
))
(define-fun-rec s!ze ((a!1 (Array Int Bool)) (x!1 Int)) Int (ite (< x!1 -10) 0 (ite (= true (select a!1 x!1)) (+ (s!ze a!1 (- x!1 1)) 1) (s!ze a!1 (- x!1 1)))))
(declare-fun array_1_SYMARRAY () (MyList Int))
(declare-fun ret_2_SYMINT () Int)
(declare-fun length_3_SYMINT () Int)
(declare-fun ret_5_SYMINT () Int)
(declare-fun ret_6_SYMINT () Int)
(declare-fun length_7_SYMINT () Int)
(declare-fun ret_9_SYMINT () Int)
(declare-fun ret_10_SYMINT () Int)
(declare-fun length_11_SYMINT () Int)
(declare-fun ret_13_SYMINT () Int)
(declare-fun ret_14_SYMINT () Int)
(declare-fun length_15_SYMINT () Int)
(assert (and 
(>= length_15_SYMINT (- 2147483648))
(<= length_15_SYMINT 2147483647)
(>= 4 length_15_SYMINT)
(>= ret_13_SYMINT (- 2147483648))
(<= ret_13_SYMINT 2147483647)
(>= ret_10_SYMINT (- 2147483648))
(<= ret_10_SYMINT 2147483647)
(> ret_13_SYMINT ret_10_SYMINT)
(>= length_11_SYMINT (- 2147483648))
(<= length_11_SYMINT 2147483647)
(< 3 length_11_SYMINT)
(>= ret_9_SYMINT (- 2147483648))
(<= ret_9_SYMINT 2147483647)
(>= ret_6_SYMINT (- 2147483648))
(<= ret_6_SYMINT 2147483647)
(> ret_9_SYMINT ret_6_SYMINT)
(>= length_7_SYMINT (- 2147483648))
(<= length_7_SYMINT 2147483647)
(< 2 length_7_SYMINT)
(>= ret_5_SYMINT (- 2147483648))
(<= ret_5_SYMINT 2147483647)
(>= ret_2_SYMINT (- 2147483648))
(<= ret_2_SYMINT 2147483647)
(> ret_5_SYMINT ret_2_SYMINT)
(>= length_3_SYMINT (- 2147483648))
(<= length_3_SYMINT 2147483647)
(< 1 length_3_SYMINT)
(let ((a!1 (=> (> length_15_SYMINT 0)
               (> (s!ze (mapping array_1_SYMARRAY) 10) 0))))
  (and (= length_15_SYMINT (seq.len (element array_1_SYMARRAY)))
       (>= length_15_SYMINT (s!ze (mapping array_1_SYMARRAY) 10))
       a!1))
(>= ret_14_SYMINT (- 2147483648))
(<= ret_14_SYMINT 2147483647)
(and (>= 3 0)
     (< 3 (seq.len (element array_1_SYMARRAY)))
     (= (seq.unit ret_14_SYMINT) (seq.at (element array_1_SYMARRAY) 3)))
(and (>= 3 0)
     (< 3 (seq.len (element array_1_SYMARRAY)))
     (= (seq.unit ret_13_SYMINT) (seq.at (element array_1_SYMARRAY) 3)))
(let ((a!1 (=> (> length_11_SYMINT 0)
               (> (s!ze (mapping array_1_SYMARRAY) 10) 0))))
  (and (= length_11_SYMINT (seq.len (element array_1_SYMARRAY)))
       (>= length_11_SYMINT (s!ze (mapping array_1_SYMARRAY) 10))
       a!1))
(and (>= 2 0)
     (< 2 (seq.len (element array_1_SYMARRAY)))
     (= (seq.unit ret_10_SYMINT) (seq.at (element array_1_SYMARRAY) 2)))
(and (>= 2 0)
     (< 2 (seq.len (element array_1_SYMARRAY)))
     (= (seq.unit ret_9_SYMINT) (seq.at (element array_1_SYMARRAY) 2)))
(let ((a!1 (=> (> length_7_SYMINT 0) (> (s!ze (mapping array_1_SYMARRAY) 10) 0))))
  (and (= length_7_SYMINT (seq.len (element array_1_SYMARRAY)))
       (>= length_7_SYMINT (s!ze (mapping array_1_SYMARRAY) 10))
       a!1))
(and (>= 1 0)
     (< 1 (seq.len (element array_1_SYMARRAY)))
     (= (seq.unit ret_6_SYMINT) (seq.at (element array_1_SYMARRAY) 1)))
(and (>= 1 0)
     (< 1 (seq.len (element array_1_SYMARRAY)))
     (= (seq.unit ret_5_SYMINT) (seq.at (element array_1_SYMARRAY) 1)))
(let ((a!1 (=> (> length_3_SYMINT 0) (> (s!ze (mapping array_1_SYMARRAY) 10) 0))))
  (and (= length_3_SYMINT (seq.len (element array_1_SYMARRAY)))
       (>= length_3_SYMINT (s!ze (mapping array_1_SYMARRAY) 10))
       a!1))
(and (>= 0 0)
     (< 0 (seq.len (element array_1_SYMARRAY)))
     (= (seq.unit ret_2_SYMINT) (seq.at (element array_1_SYMARRAY) 0)))
))
;
(declare-const retMain_16_SYMINT Int)
(assert (= retMain_16_SYMINT ret_14_SYMINT))
;(define-fun ret_9_SYMINT () Int
;  (- 2147480142))
;(define-fun ret_2_SYMINT () Int
;  (- 2147483502))
;(define-fun ret_5_SYMINT () Int
;  (- 2147480143))
;(define-fun ret_10_SYMINT () Int
;  (- 2147480142))
;(define-fun ret_13_SYMINT () Int
;  (- 2147480141))
;(define-fun array_1_SYMARRAY () List_Int
;  (let ((a!1 (seq.++ (seq.unit (- 2147483502))
;                   (seq.++ (seq.unit (- 2147480143))
;                           (seq.++ (seq.unit (- 2147480142))
;                                   (seq.unit (- 2147480141)))))))
;  (List_Int (lambda ((x!1 Int))
;              (or (= x!1 (- 6)) (= x!1 8) (= x!1 (- 2)) (= x!1 (- 10))))
;            a!1)))
;(define-fun length_11_SYMINT () Int
;  4)
;(define-fun length_7_SYMINT () Int
;  4)
;(define-fun ret_14_SYMINT () Int
;  (- 2147480141))
;(define-fun length_15_SYMINT () Int
;  4)
;(define-fun ret_6_SYMINT () Int
;  (- 2147480143))
;(define-fun length_3_SYMINT () Int
;  4)